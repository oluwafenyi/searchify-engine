### YamlMime:ManagedReference
items:
- uid: SearchifyEngine.Utils
  commentId: T:SearchifyEngine.Utils
  id: Utils
  parent: SearchifyEngine
  children:
  - SearchifyEngine.Utils.CleanText(System.String)
  - SearchifyEngine.Utils.ToDeltaList(System.Collections.Generic.List{System.UInt32})
  langs:
  - csharp
  - vb
  name: Utils
  nameWithType: Utils
  fullName: SearchifyEngine.Utils
  type: Class
  source:
    remote:
      path: SearchifyEngine/Utils.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: Utils
    path: ../SearchifyEngine/Utils.cs
    startLine: 8
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine
  summary: "\nStatic class housing a number of utility methods\n"
  example: []
  syntax:
    content: public static class Utils
    content.vb: Public Module Utils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SearchifyEngine.Utils.CleanText(System.String)
  commentId: M:SearchifyEngine.Utils.CleanText(System.String)
  id: CleanText(System.String)
  parent: SearchifyEngine.Utils
  langs:
  - csharp
  - vb
  name: CleanText(String)
  nameWithType: Utils.CleanText(String)
  fullName: SearchifyEngine.Utils.CleanText(System.String)
  type: Method
  source:
    remote:
      path: SearchifyEngine/Utils.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: CleanText
    path: ../SearchifyEngine/Utils.cs
    startLine: 15
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine
  summary: "\nConverts multiple spaces to one an strips punctuation from text, converts text to lowercase\n"
  example: []
  syntax:
    content: public static string CleanText(string text)
    parameters:
    - id: text
      type: System.String
      description: any string value
    return:
      type: System.String
      description: cleaned text
    content.vb: Public Shared Function CleanText(text As String) As String
  overload: SearchifyEngine.Utils.CleanText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchifyEngine.Utils.ToDeltaList(System.Collections.Generic.List{System.UInt32})
  commentId: M:SearchifyEngine.Utils.ToDeltaList(System.Collections.Generic.List{System.UInt32})
  id: ToDeltaList(System.Collections.Generic.List{System.UInt32})
  parent: SearchifyEngine.Utils
  langs:
  - csharp
  - vb
  name: ToDeltaList(List<UInt32>)
  nameWithType: Utils.ToDeltaList(List<UInt32>)
  fullName: SearchifyEngine.Utils.ToDeltaList(System.Collections.Generic.List<System.UInt32>)
  type: Method
  source:
    remote:
      path: SearchifyEngine/Utils.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: ToDeltaList
    path: ../SearchifyEngine/Utils.cs
    startLine: 27
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine
  summary: "\nCreates a list where elements are replaced by the value of the delta between each element and the previous element\n"
  example: []
  syntax:
    content: public static List<uint> ToDeltaList(List<uint> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{System.UInt32}
      description: list of nonnegative integers
    return:
      type: System.Collections.Generic.List{System.UInt32}
      description: list of delta ulong values
    content.vb: Public Shared Function ToDeltaList(list As List(Of UInteger)) As List(Of UInteger)
  overload: SearchifyEngine.Utils.ToDeltaList*
  nameWithType.vb: Utils.ToDeltaList(List(Of UInt32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SearchifyEngine.Utils.ToDeltaList(System.Collections.Generic.List(Of System.UInt32))
  name.vb: ToDeltaList(List(Of UInt32))
references:
- uid: SearchifyEngine
  commentId: N:SearchifyEngine
  name: SearchifyEngine
  nameWithType: SearchifyEngine
  fullName: SearchifyEngine
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SearchifyEngine.Utils.CleanText*
  commentId: Overload:SearchifyEngine.Utils.CleanText
  name: CleanText
  nameWithType: Utils.CleanText
  fullName: SearchifyEngine.Utils.CleanText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SearchifyEngine.Utils.ToDeltaList*
  commentId: Overload:SearchifyEngine.Utils.ToDeltaList
  name: ToDeltaList
  nameWithType: Utils.ToDeltaList
  fullName: SearchifyEngine.Utils.ToDeltaList
- uid: System.Collections.Generic.List{System.UInt32}
  commentId: T:System.Collections.Generic.List{System.UInt32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UInt32>
  nameWithType: List<UInt32>
  fullName: System.Collections.Generic.List<System.UInt32>
  nameWithType.vb: List(Of UInt32)
  fullName.vb: System.Collections.Generic.List(Of System.UInt32)
  name.vb: List(Of UInt32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
