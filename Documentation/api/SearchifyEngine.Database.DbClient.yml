### YamlMime:ManagedReference
items:
- uid: SearchifyEngine.Database.DbClient
  commentId: T:SearchifyEngine.Database.DbClient
  id: DbClient
  parent: SearchifyEngine.Database
  children:
  - SearchifyEngine.Database.DbClient.CreateClient(System.Boolean)
  - SearchifyEngine.Database.DbClient.CreateTables
  - SearchifyEngine.Database.DbClient.GetTableDescription(System.String)
  - SearchifyEngine.Database.DbClient.Store
  langs:
  - csharp
  - vb
  name: DbClient
  nameWithType: DbClient
  fullName: SearchifyEngine.Database.DbClient
  type: Class
  source:
    remote:
      path: SearchifyEngine/Database/DbClient.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: DbClient
    path: ../SearchifyEngine/Database/DbClient.cs
    startLine: 16
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Database
  summary: "\nClient library for interactions with DynamoDB\n"
  example: []
  syntax:
    content: public static class DbClient
    content.vb: Public Module DbClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SearchifyEngine.Database.DbClient.Store
  commentId: F:SearchifyEngine.Database.DbClient.Store
  id: Store
  parent: SearchifyEngine.Database.DbClient
  langs:
  - csharp
  - vb
  name: Store
  nameWithType: DbClient.Store
  fullName: SearchifyEngine.Database.DbClient.Store
  type: Field
  source:
    remote:
      path: SearchifyEngine/Database/DbClient.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: Store
    path: ../SearchifyEngine/Database/DbClient.cs
    startLine: 27
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Database
  summary: "\n<xref href=\"SearchifyEngine.Store.InvertedIndexDynamoDbStore\" data-throw-if-not-resolved=\"false\"></xref> instance associated with the client\n"
  example: []
  syntax:
    content: public static IStore Store
    return:
      type: SearchifyEngine.Store.IStore
    content.vb: Public Shared Store As IStore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchifyEngine.Database.DbClient.CreateClient(System.Boolean)
  commentId: M:SearchifyEngine.Database.DbClient.CreateClient(System.Boolean)
  id: CreateClient(System.Boolean)
  parent: SearchifyEngine.Database.DbClient
  langs:
  - csharp
  - vb
  name: CreateClient(Boolean)
  nameWithType: DbClient.CreateClient(Boolean)
  fullName: SearchifyEngine.Database.DbClient.CreateClient(System.Boolean)
  type: Method
  source:
    remote:
      path: SearchifyEngine/Database/DbClient.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: CreateClient
    path: ../SearchifyEngine/Database/DbClient.cs
    startLine: 63
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Database
  summary: "\nConnects to DynamoDB, and instantiates <xref href=\"SearchifyEngine.Database.DbClient.Store\" data-throw-if-not-resolved=\"false\"></xref> value\n"
  example: []
  syntax:
    content: public static bool CreateClient(bool useLocal)
    parameters:
    - id: useLocal
      type: System.Boolean
      description: set to true if you are using dynamodblocal
    return:
      type: System.Boolean
      description: status of client creation, true for success, false for failure
    content.vb: Public Shared Function CreateClient(useLocal As Boolean) As Boolean
  overload: SearchifyEngine.Database.DbClient.CreateClient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchifyEngine.Database.DbClient.CreateTables
  commentId: M:SearchifyEngine.Database.DbClient.CreateTables
  id: CreateTables
  parent: SearchifyEngine.Database.DbClient
  langs:
  - csharp
  - vb
  name: CreateTables()
  nameWithType: DbClient.CreateTables()
  fullName: SearchifyEngine.Database.DbClient.CreateTables()
  type: Method
  source:
    remote:
      path: SearchifyEngine/Database/DbClient.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: CreateTables
    path: ../SearchifyEngine/Database/DbClient.cs
    startLine: 138
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Database
  summary: "\nCreates necessary database tables if they do not already exist\n"
  example: []
  syntax:
    content: public static async Task CreateTables()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function CreateTables As Task
  overload: SearchifyEngine.Database.DbClient.CreateTables*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: SearchifyEngine.Database.DbClient.GetTableDescription(System.String)
  commentId: M:SearchifyEngine.Database.DbClient.GetTableDescription(System.String)
  id: GetTableDescription(System.String)
  parent: SearchifyEngine.Database.DbClient
  langs:
  - csharp
  - vb
  name: GetTableDescription(String)
  nameWithType: DbClient.GetTableDescription(String)
  fullName: SearchifyEngine.Database.DbClient.GetTableDescription(System.String)
  type: Method
  source:
    remote:
      path: SearchifyEngine/Database/DbClient.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: GetTableDescription
    path: ../SearchifyEngine/Database/DbClient.cs
    startLine: 166
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Database
  summary: "\nProvides TableDescription for table specified. If table doesn&apos;t exist, null is returned.\n"
  example: []
  syntax:
    content: public static async Task<TableDescription> GetTableDescription(string tableName)
    parameters:
    - id: tableName
      type: System.String
      description: table name
    return:
      type: System.Threading.Tasks.Task{TableDescription}
      description: table description
    content.vb: Public Shared Function GetTableDescription(tableName As String) As Task(Of TableDescription)
  overload: SearchifyEngine.Database.DbClient.GetTableDescription*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SearchifyEngine.Database
  commentId: N:SearchifyEngine.Database
  name: SearchifyEngine.Database
  nameWithType: SearchifyEngine.Database
  fullName: SearchifyEngine.Database
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SearchifyEngine.Store.InvertedIndexDynamoDbStore
  commentId: T:SearchifyEngine.Store.InvertedIndexDynamoDbStore
  name: InvertedIndexDynamoDbStore
  nameWithType: InvertedIndexDynamoDbStore
  fullName: SearchifyEngine.Store.InvertedIndexDynamoDbStore
- uid: SearchifyEngine.Store.IStore
  commentId: T:SearchifyEngine.Store.IStore
  parent: SearchifyEngine.Store
  name: IStore
  nameWithType: IStore
  fullName: SearchifyEngine.Store.IStore
- uid: SearchifyEngine.Store
  commentId: N:SearchifyEngine.Store
  name: SearchifyEngine.Store
  nameWithType: SearchifyEngine.Store
  fullName: SearchifyEngine.Store
- uid: SearchifyEngine.Database.DbClient.Store
  commentId: F:SearchifyEngine.Database.DbClient.Store
  isExternal: true
- uid: SearchifyEngine.Database.DbClient.CreateClient*
  commentId: Overload:SearchifyEngine.Database.DbClient.CreateClient
  name: CreateClient
  nameWithType: DbClient.CreateClient
  fullName: SearchifyEngine.Database.DbClient.CreateClient
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SearchifyEngine.Database.DbClient.CreateTables*
  commentId: Overload:SearchifyEngine.Database.DbClient.CreateTables
  name: CreateTables
  nameWithType: DbClient.CreateTables
  fullName: SearchifyEngine.Database.DbClient.CreateTables
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: SearchifyEngine.Database.DbClient.GetTableDescription*
  commentId: Overload:SearchifyEngine.Database.DbClient.GetTableDescription
  name: GetTableDescription
  nameWithType: DbClient.GetTableDescription
  fullName: SearchifyEngine.Database.DbClient.GetTableDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{TableDescription}
  commentId: T:System.Threading.Tasks.Task{TableDescription}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TableDescription>
  nameWithType: Task<TableDescription>
  fullName: System.Threading.Tasks.Task<TableDescription>
  nameWithType.vb: Task(Of TableDescription)
  fullName.vb: System.Threading.Tasks.Task(Of TableDescription)
  name.vb: Task(Of TableDescription)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TableDescription
    name: TableDescription
    nameWithType: TableDescription
    fullName: TableDescription
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TableDescription
    name: TableDescription
    nameWithType: TableDescription
    fullName: TableDescription
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
