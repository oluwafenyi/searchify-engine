### YamlMime:ManagedReference
items:
- uid: SearchifyEngine.Ranker.Ranker
  commentId: T:SearchifyEngine.Ranker.Ranker
  id: Ranker
  parent: SearchifyEngine.Ranker
  children:
  - SearchifyEngine.Ranker.Ranker.#ctor(SearchifyEngine.Indexer.Indexer)
  - SearchifyEngine.Ranker.Ranker.RankedResultsList
  - SearchifyEngine.Ranker.Ranker.Score(System.UInt32,System.Collections.Generic.List{SearchifyEngine.Searcher.Pointer})
  langs:
  - csharp
  - vb
  name: Ranker
  nameWithType: Ranker
  fullName: SearchifyEngine.Ranker.Ranker
  type: Class
  source:
    remote:
      path: SearchifyEngine/Ranker/Ranker.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: Ranker
    path: ../SearchifyEngine/Ranker/Ranker.cs
    startLine: 12
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Ranker
  summary: "\nMaintains and calculates document scores for a query\n"
  example: []
  syntax:
    content: public class Ranker
    content.vb: Public Class Ranker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SearchifyEngine.Ranker.Ranker.#ctor(SearchifyEngine.Indexer.Indexer)
  commentId: M:SearchifyEngine.Ranker.Ranker.#ctor(SearchifyEngine.Indexer.Indexer)
  id: '#ctor(SearchifyEngine.Indexer.Indexer)'
  parent: SearchifyEngine.Ranker.Ranker
  langs:
  - csharp
  - vb
  name: Ranker(Indexer)
  nameWithType: Ranker.Ranker(Indexer)
  fullName: SearchifyEngine.Ranker.Ranker.Ranker(SearchifyEngine.Indexer.Indexer)
  type: Constructor
  source:
    remote:
      path: SearchifyEngine/Ranker/Ranker.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: .ctor
    path: ../SearchifyEngine/Ranker/Ranker.cs
    startLine: 21
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Ranker
  summary: "\nInstantiates a ranker object\n"
  example: []
  syntax:
    content: public Ranker(Indexer indexer)
    parameters:
    - id: indexer
      type: SearchifyEngine.Indexer.Indexer
      description: an instance of <xref href="SearchifyEngine.Indexer.Indexer" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(indexer As Indexer)
  overload: SearchifyEngine.Ranker.Ranker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchifyEngine.Ranker.Ranker.Score(System.UInt32,System.Collections.Generic.List{SearchifyEngine.Searcher.Pointer})
  commentId: M:SearchifyEngine.Ranker.Ranker.Score(System.UInt32,System.Collections.Generic.List{SearchifyEngine.Searcher.Pointer})
  id: Score(System.UInt32,System.Collections.Generic.List{SearchifyEngine.Searcher.Pointer})
  parent: SearchifyEngine.Ranker.Ranker
  langs:
  - csharp
  - vb
  name: Score(UInt32, List<Pointer>)
  nameWithType: Ranker.Score(UInt32, List<Pointer>)
  fullName: SearchifyEngine.Ranker.Ranker.Score(System.UInt32, System.Collections.Generic.List<SearchifyEngine.Searcher.Pointer>)
  type: Method
  source:
    remote:
      path: SearchifyEngine/Ranker/Ranker.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: Score
    path: ../SearchifyEngine/Ranker/Ranker.cs
    startLine: 31
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Ranker
  summary: "\nComputes and stores file score\n"
  example: []
  syntax:
    content: public void Score(uint fieldId, List<Pointer> pointerList)
    parameters:
    - id: fieldId
      type: System.UInt32
      description: id of file
    - id: pointerList
      type: System.Collections.Generic.List{SearchifyEngine.Searcher.Pointer}
      description: pointer list of query terms that can be found in the file
    content.vb: Public Sub Score(fieldId As UInteger, pointerList As List(Of Pointer))
  overload: SearchifyEngine.Ranker.Ranker.Score*
  nameWithType.vb: Ranker.Score(UInt32, List(Of Pointer))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SearchifyEngine.Ranker.Ranker.Score(System.UInt32, System.Collections.Generic.List(Of SearchifyEngine.Searcher.Pointer))
  name.vb: Score(UInt32, List(Of Pointer))
- uid: SearchifyEngine.Ranker.Ranker.RankedResultsList
  commentId: M:SearchifyEngine.Ranker.Ranker.RankedResultsList
  id: RankedResultsList
  parent: SearchifyEngine.Ranker.Ranker
  langs:
  - csharp
  - vb
  name: RankedResultsList()
  nameWithType: Ranker.RankedResultsList()
  fullName: SearchifyEngine.Ranker.Ranker.RankedResultsList()
  type: Method
  source:
    remote:
      path: SearchifyEngine/Ranker/Ranker.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: RankedResultsList
    path: ../SearchifyEngine/Ranker/Ranker.cs
    startLine: 40
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Ranker
  summary: "\nReturns an ordered array of file ids based on scores\n"
  example: []
  syntax:
    content: public uint[] RankedResultsList()
    return:
      type: System.UInt32[]
      description: list of file ids
    content.vb: Public Function RankedResultsList As UInteger()
  overload: SearchifyEngine.Ranker.Ranker.RankedResultsList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SearchifyEngine.Ranker
  commentId: N:SearchifyEngine.Ranker
  name: SearchifyEngine.Ranker
  nameWithType: SearchifyEngine.Ranker
  fullName: SearchifyEngine.Ranker
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SearchifyEngine.Indexer.Indexer
  commentId: T:SearchifyEngine.Indexer.Indexer
  parent: SearchifyEngine.Indexer
  name: Indexer
  nameWithType: Indexer
  fullName: SearchifyEngine.Indexer.Indexer
- uid: SearchifyEngine.Ranker.Ranker.#ctor*
  commentId: Overload:SearchifyEngine.Ranker.Ranker.#ctor
  name: Ranker
  nameWithType: Ranker.Ranker
  fullName: SearchifyEngine.Ranker.Ranker.Ranker
- uid: SearchifyEngine.Indexer
  commentId: N:SearchifyEngine.Indexer
  name: SearchifyEngine.Indexer
  nameWithType: SearchifyEngine.Indexer
  fullName: SearchifyEngine.Indexer
- uid: SearchifyEngine.Ranker.Ranker.Score*
  commentId: Overload:SearchifyEngine.Ranker.Ranker.Score
  name: Score
  nameWithType: Ranker.Score
  fullName: SearchifyEngine.Ranker.Ranker.Score
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Collections.Generic.List{SearchifyEngine.Searcher.Pointer}
  commentId: T:System.Collections.Generic.List{SearchifyEngine.Searcher.Pointer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Pointer>
  nameWithType: List<Pointer>
  fullName: System.Collections.Generic.List<SearchifyEngine.Searcher.Pointer>
  nameWithType.vb: List(Of Pointer)
  fullName.vb: System.Collections.Generic.List(Of SearchifyEngine.Searcher.Pointer)
  name.vb: List(Of Pointer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchifyEngine.Searcher.Pointer
    name: Pointer
    nameWithType: Pointer
    fullName: SearchifyEngine.Searcher.Pointer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchifyEngine.Searcher.Pointer
    name: Pointer
    nameWithType: Pointer
    fullName: SearchifyEngine.Searcher.Pointer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SearchifyEngine.Ranker.Ranker.RankedResultsList*
  commentId: Overload:SearchifyEngine.Ranker.Ranker.RankedResultsList
  name: RankedResultsList
  nameWithType: Ranker.RankedResultsList
  fullName: SearchifyEngine.Ranker.Ranker.RankedResultsList
- uid: System.UInt32[]
  isExternal: true
  name: UInt32[]
  nameWithType: UInt32[]
  fullName: System.UInt32[]
  nameWithType.vb: UInt32()
  fullName.vb: System.UInt32()
  name.vb: UInt32()
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
