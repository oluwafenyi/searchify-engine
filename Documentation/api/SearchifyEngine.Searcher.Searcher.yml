### YamlMime:ManagedReference
items:
- uid: SearchifyEngine.Searcher.Searcher
  commentId: T:SearchifyEngine.Searcher.Searcher
  id: Searcher
  parent: SearchifyEngine.Searcher
  children:
  - SearchifyEngine.Searcher.Searcher.#ctor(SearchifyEngine.Indexer.Indexer)
  - SearchifyEngine.Searcher.Searcher.ExecuteQuery(System.String)
  langs:
  - csharp
  - vb
  name: Searcher
  nameWithType: Searcher
  fullName: SearchifyEngine.Searcher.Searcher
  type: Class
  source:
    remote:
      path: SearchifyEngine/Searcher/Searcher.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: Searcher
    path: ../SearchifyEngine/Searcher/Searcher.cs
    startLine: 11
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nSearcher class operates on an indexer\n"
  example: []
  syntax:
    content: public class Searcher
    content.vb: Public Class Searcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SearchifyEngine.Searcher.Searcher.#ctor(SearchifyEngine.Indexer.Indexer)
  commentId: M:SearchifyEngine.Searcher.Searcher.#ctor(SearchifyEngine.Indexer.Indexer)
  id: '#ctor(SearchifyEngine.Indexer.Indexer)'
  parent: SearchifyEngine.Searcher.Searcher
  langs:
  - csharp
  - vb
  name: Searcher(Indexer)
  nameWithType: Searcher.Searcher(Indexer)
  fullName: SearchifyEngine.Searcher.Searcher.Searcher(SearchifyEngine.Indexer.Indexer)
  type: Constructor
  source:
    remote:
      path: SearchifyEngine/Searcher/Searcher.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: .ctor
    path: ../SearchifyEngine/Searcher/Searcher.cs
    startLine: 20
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nInstantiates a Searcher object\n"
  example: []
  syntax:
    content: public Searcher(Indexer indexer)
    parameters:
    - id: indexer
      type: SearchifyEngine.Indexer.Indexer
      description: instance of <xref href="SearchifyEngine.Indexer" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(indexer As Indexer)
  overload: SearchifyEngine.Searcher.Searcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchifyEngine.Searcher.Searcher.ExecuteQuery(System.String)
  commentId: M:SearchifyEngine.Searcher.Searcher.ExecuteQuery(System.String)
  id: ExecuteQuery(System.String)
  parent: SearchifyEngine.Searcher.Searcher
  langs:
  - csharp
  - vb
  name: ExecuteQuery(String)
  nameWithType: Searcher.ExecuteQuery(String)
  fullName: SearchifyEngine.Searcher.Searcher.ExecuteQuery(System.String)
  type: Method
  source:
    remote:
      path: SearchifyEngine/Searcher/Searcher.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: ExecuteQuery
    path: ../SearchifyEngine/Searcher/Searcher.cs
    startLine: 31
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nReturns a ranked array of file ids associated with a query\n"
  example: []
  syntax:
    content: public async Task<uint[]> ExecuteQuery(string query)
    parameters:
    - id: query
      type: System.String
      description: any nonempty string value
    return:
      type: System.Threading.Tasks.Task{System.UInt32[]}
      description: Ranked array of file ids
    content.vb: Public Function ExecuteQuery(query As String) As Task(Of UInteger())
  overload: SearchifyEngine.Searcher.Searcher.ExecuteQuery*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: SearchifyEngine.Searcher
  commentId: N:SearchifyEngine.Searcher
  name: SearchifyEngine.Searcher
  nameWithType: SearchifyEngine.Searcher
  fullName: SearchifyEngine.Searcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SearchifyEngine.Indexer
  commentId: N:SearchifyEngine.Indexer
  name: SearchifyEngine.Indexer
  nameWithType: SearchifyEngine.Indexer
  fullName: SearchifyEngine.Indexer
- uid: SearchifyEngine.Searcher.Searcher.#ctor*
  commentId: Overload:SearchifyEngine.Searcher.Searcher.#ctor
  name: Searcher
  nameWithType: Searcher.Searcher
  fullName: SearchifyEngine.Searcher.Searcher.Searcher
- uid: SearchifyEngine.Indexer.Indexer
  commentId: T:SearchifyEngine.Indexer.Indexer
  parent: SearchifyEngine.Indexer
  name: Indexer
  nameWithType: Indexer
  fullName: SearchifyEngine.Indexer.Indexer
- uid: SearchifyEngine.Searcher.Searcher.ExecuteQuery*
  commentId: Overload:SearchifyEngine.Searcher.Searcher.ExecuteQuery
  name: ExecuteQuery
  nameWithType: Searcher.ExecuteQuery
  fullName: SearchifyEngine.Searcher.Searcher.ExecuteQuery
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.UInt32[]}
  commentId: T:System.Threading.Tasks.Task{System.UInt32[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<UInt32[]>
  nameWithType: Task<UInt32[]>
  fullName: System.Threading.Tasks.Task<System.UInt32[]>
  nameWithType.vb: Task(Of UInt32())
  fullName.vb: System.Threading.Tasks.Task(Of System.UInt32())
  name.vb: Task(Of UInt32())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
