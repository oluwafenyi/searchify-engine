### YamlMime:ManagedReference
items:
- uid: SearchifyEngine.Searcher.Pointer
  commentId: T:SearchifyEngine.Searcher.Pointer
  id: Pointer
  parent: SearchifyEngine.Searcher
  children:
  - SearchifyEngine.Searcher.Pointer.#ctor(System.String,System.UInt32,System.UInt32)
  - SearchifyEngine.Searcher.Pointer.CompareTo(SearchifyEngine.Searcher.Pointer)
  - SearchifyEngine.Searcher.Pointer.CompareTo(System.Object)
  - SearchifyEngine.Searcher.Pointer.FileId
  - SearchifyEngine.Searcher.Pointer.P
  - SearchifyEngine.Searcher.Pointer.Term
  langs:
  - csharp
  - vb
  name: Pointer
  nameWithType: Pointer
  fullName: SearchifyEngine.Searcher.Pointer
  type: Class
  source:
    remote:
      path: SearchifyEngine/Searcher/Pointer.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: Pointer
    path: ../SearchifyEngine/Searcher/Pointer.cs
    startLine: 8
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nSearch Pointer object aids the k-way linear merge algorithm by storing the pointer to each index term being\niterated reverse index\n"
  example: []
  syntax:
    content: 'public class Pointer : IComparable, IComparable<Pointer>'
    content.vb: >-
      Public Class Pointer

          Implements IComparable, IComparable(Of Pointer)
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  - System.IComparable{SearchifyEngine.Searcher.Pointer}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SearchifyEngine.Searcher.Pointer.Term
  commentId: F:SearchifyEngine.Searcher.Pointer.Term
  id: Term
  parent: SearchifyEngine.Searcher.Pointer
  langs:
  - csharp
  - vb
  name: Term
  nameWithType: Pointer.Term
  fullName: SearchifyEngine.Searcher.Pointer.Term
  type: Field
  source:
    remote:
      path: SearchifyEngine/Searcher/Pointer.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: Term
    path: ../SearchifyEngine/Searcher/Pointer.cs
    startLine: 13
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nThe key of the reverse index\n"
  example: []
  syntax:
    content: public readonly string Term
    return:
      type: System.String
    content.vb: Public ReadOnly Term As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SearchifyEngine.Searcher.Pointer.P
  commentId: F:SearchifyEngine.Searcher.Pointer.P
  id: P
  parent: SearchifyEngine.Searcher.Pointer
  langs:
  - csharp
  - vb
  name: P
  nameWithType: Pointer.P
  fullName: SearchifyEngine.Searcher.Pointer.P
  type: Field
  source:
    remote:
      path: SearchifyEngine/Searcher/Pointer.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: P
    path: ../SearchifyEngine/Searcher/Pointer.cs
    startLine: 17
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nIndex of current iteration of the Index Term list\n"
  example: []
  syntax:
    content: public readonly uint P
    return:
      type: System.UInt32
    content.vb: Public ReadOnly P As UInteger
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SearchifyEngine.Searcher.Pointer.FileId
  commentId: F:SearchifyEngine.Searcher.Pointer.FileId
  id: FileId
  parent: SearchifyEngine.Searcher.Pointer
  langs:
  - csharp
  - vb
  name: FileId
  nameWithType: Pointer.FileId
  fullName: SearchifyEngine.Searcher.Pointer.FileId
  type: Field
  source:
    remote:
      path: SearchifyEngine/Searcher/Pointer.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: FileId
    path: ../SearchifyEngine/Searcher/Pointer.cs
    startLine: 21
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nFileId of Index Term\n"
  example: []
  syntax:
    content: public readonly uint FileId
    return:
      type: System.UInt32
    content.vb: Public ReadOnly FileId As UInteger
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SearchifyEngine.Searcher.Pointer.#ctor(System.String,System.UInt32,System.UInt32)
  commentId: M:SearchifyEngine.Searcher.Pointer.#ctor(System.String,System.UInt32,System.UInt32)
  id: '#ctor(System.String,System.UInt32,System.UInt32)'
  parent: SearchifyEngine.Searcher.Pointer
  langs:
  - csharp
  - vb
  name: Pointer(String, UInt32, UInt32)
  nameWithType: Pointer.Pointer(String, UInt32, UInt32)
  fullName: SearchifyEngine.Searcher.Pointer.Pointer(System.String, System.UInt32, System.UInt32)
  type: Constructor
  source:
    remote:
      path: SearchifyEngine/Searcher/Pointer.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: .ctor
    path: ../SearchifyEngine/Searcher/Pointer.cs
    startLine: 29
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nInstantiate a Pointer object\n"
  example: []
  syntax:
    content: public Pointer(string term, uint p, uint fileId)
    parameters:
    - id: term
      type: System.String
      description: word
    - id: p
      type: System.UInt32
      description: current index of IndexTermList iteration
    - id: fileId
      type: System.UInt32
      description: file id
    content.vb: Public Sub New(term As String, p As UInteger, fileId As UInteger)
  overload: SearchifyEngine.Searcher.Pointer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchifyEngine.Searcher.Pointer.CompareTo(System.Object)
  commentId: M:SearchifyEngine.Searcher.Pointer.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: SearchifyEngine.Searcher.Pointer
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: Pointer.CompareTo(Object)
  fullName: SearchifyEngine.Searcher.Pointer.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: SearchifyEngine/Searcher/Pointer.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: CompareTo
    path: ../SearchifyEngine/Searcher/Pointer.cs
    startLine: 46
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nIComparable implementation\n"
  example: []
  syntax:
    content: public int CompareTo(object other)
    parameters:
    - id: other
      type: System.Object
      description: object for comparison
    return:
      type: System.Int32
      description: "\n1 when this.FileId gt other.FileId\n-1 when this.FileId lt other.FileId\n0 otherwise\n"
    content.vb: Public Function CompareTo(other As Object) As Integer
  overload: SearchifyEngine.Searcher.Pointer.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Raised when comparing with null
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchifyEngine.Searcher.Pointer.CompareTo(SearchifyEngine.Searcher.Pointer)
  commentId: M:SearchifyEngine.Searcher.Pointer.CompareTo(SearchifyEngine.Searcher.Pointer)
  id: CompareTo(SearchifyEngine.Searcher.Pointer)
  parent: SearchifyEngine.Searcher.Pointer
  langs:
  - csharp
  - vb
  name: CompareTo(Pointer)
  nameWithType: Pointer.CompareTo(Pointer)
  fullName: SearchifyEngine.Searcher.Pointer.CompareTo(SearchifyEngine.Searcher.Pointer)
  type: Method
  source:
    remote:
      path: SearchifyEngine/Searcher/Pointer.cs
      branch: master
      repo: https://github.com/oluwafenyi/searchify-engine.git
    id: CompareTo
    path: ../SearchifyEngine/Searcher/Pointer.cs
    startLine: 69
  assemblies:
  - SearchifyEngine
  namespace: SearchifyEngine.Searcher
  summary: "\nIComparable Pointer implementation\n"
  example: []
  syntax:
    content: public int CompareTo(Pointer other)
    parameters:
    - id: other
      type: SearchifyEngine.Searcher.Pointer
      description: Pointer object for comparison
    return:
      type: System.Int32
      description: "\n1 when this.FileId gt other.FileId\n-1 when this.FileId lt other.FileId\n0 otherwise\n"
    content.vb: Public Function CompareTo(other As Pointer) As Integer
  overload: SearchifyEngine.Searcher.Pointer.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Raised when comparing with null
  implements:
  - System.IComparable{SearchifyEngine.Searcher.Pointer}.CompareTo(SearchifyEngine.Searcher.Pointer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SearchifyEngine.Searcher
  commentId: N:SearchifyEngine.Searcher
  name: SearchifyEngine.Searcher
  nameWithType: SearchifyEngine.Searcher
  fullName: SearchifyEngine.Searcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{SearchifyEngine.Searcher.Pointer}
  commentId: T:System.IComparable{SearchifyEngine.Searcher.Pointer}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Pointer>
  nameWithType: IComparable<Pointer>
  fullName: System.IComparable<SearchifyEngine.Searcher.Pointer>
  nameWithType.vb: IComparable(Of Pointer)
  fullName.vb: System.IComparable(Of SearchifyEngine.Searcher.Pointer)
  name.vb: IComparable(Of Pointer)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchifyEngine.Searcher.Pointer
    name: Pointer
    nameWithType: Pointer
    fullName: SearchifyEngine.Searcher.Pointer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchifyEngine.Searcher.Pointer
    name: Pointer
    nameWithType: Pointer
    fullName: SearchifyEngine.Searcher.Pointer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: SearchifyEngine.Searcher.Pointer.#ctor*
  commentId: Overload:SearchifyEngine.Searcher.Pointer.#ctor
  name: Pointer
  nameWithType: Pointer.Pointer
  fullName: SearchifyEngine.Searcher.Pointer.Pointer
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: SearchifyEngine.Searcher.Pointer.CompareTo*
  commentId: Overload:SearchifyEngine.Searcher.Pointer.CompareTo
  name: CompareTo
  nameWithType: Pointer.CompareTo
  fullName: SearchifyEngine.Searcher.Pointer.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable{SearchifyEngine.Searcher.Pointer}.CompareTo(SearchifyEngine.Searcher.Pointer)
  commentId: M:System.IComparable{SearchifyEngine.Searcher.Pointer}.CompareTo(SearchifyEngine.Searcher.Pointer)
  parent: System.IComparable{SearchifyEngine.Searcher.Pointer}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Pointer)
  nameWithType: IComparable<Pointer>.CompareTo(Pointer)
  fullName: System.IComparable<SearchifyEngine.Searcher.Pointer>.CompareTo(SearchifyEngine.Searcher.Pointer)
  nameWithType.vb: IComparable(Of Pointer).CompareTo(Pointer)
  fullName.vb: System.IComparable(Of SearchifyEngine.Searcher.Pointer).CompareTo(SearchifyEngine.Searcher.Pointer)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<Pointer>.CompareTo
    fullName: System.IComparable<SearchifyEngine.Searcher.Pointer>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchifyEngine.Searcher.Pointer
    name: Pointer
    nameWithType: Pointer
    fullName: SearchifyEngine.Searcher.Pointer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of Pointer).CompareTo
    fullName: System.IComparable(Of SearchifyEngine.Searcher.Pointer).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchifyEngine.Searcher.Pointer
    name: Pointer
    nameWithType: Pointer
    fullName: SearchifyEngine.Searcher.Pointer
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchifyEngine.Searcher.Pointer
  commentId: T:SearchifyEngine.Searcher.Pointer
  parent: SearchifyEngine.Searcher
  name: Pointer
  nameWithType: Pointer
  fullName: SearchifyEngine.Searcher.Pointer
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
